services:
  app:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ../backend/.env
    depends_on:
      judge0-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    env_file:
      - ../frontend/.env
    depends_on:
      - app

  judge0-api:
    container_name: judge0-api
    image: judge0/judge0:latest
    env_file: .env
    ports:
      - "2358:2358"
    depends_on:
      judge0-db:
        condition: service_healthy
      judge0-redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=judge0-redis
      - POSTGRES_HOST=judge0-db
      - POSTGRES_DB=judge0
      - POSTGRES_PASSWORD=strongpassword123
      - POSTGRES_USER=postgres 
      - REDIS_PASSWORD=strong_redis_pass_123
      - REDIS_PORT=6379
      - ENABLE_PROMETHEUS_METRICS=false
      - ENABLE_ADDITIONAL_FILENAMES=false
    privileged: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2358/about"]
      interval: 10s
      timeout: 5s
      retries: 3

  judge0-db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  judge0-redis:
    image: redis:7
    env_file: .env
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
  redis_data: